# -*- coding: utf-8 -*-
"""Q1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G3cCDUlvLwNHyT8ZOHO42ppcFd0cPLBF
"""

import pandas as pd               # Data Handling
import numpy as np                # Data manipulation
from numpy.linalg import inv      # Calculate Matrix Inverse
import matplotlib.pyplot as plt   # Plot Graphs
import plotly.express as px       # Plot 3D figures to visualize data
import random                     # To randomize
import statistics                 # To calculate central tendencies
import warnings                   # To ignore warnings
warnings.filterwarnings('ignore')


train = pd.read_csv("/content/FMLA1Q1Data_train.csv",header = None)
test = pd.read_csv("/content/FMLA1Q1Data_test.csv",header = None)
train.columns = ["x1","x2","y"]
test.columns = ["x1","x2","y"]

fig = px.scatter_3d(train,x='x1', y='x2', z='y')
fig.update_traces(marker=dict(size=1,color = 'blue'))
fig.show()

XT = np.matrix(train[["x1","x2"]])
Y = np.matrix(train[["y"]])
X = XT.transpose()
XXT = np.dot(X,XT)
XXT_inv = inv(XXT)
XXT_invX = np.dot(XXT_inv,X)
Wml = np.dot(XXT_invX,Y)
print(f'The analytical solution, gives the ideal weights as \n w1 = {float(Wml[0])} and w2 = {float(Wml[1])}' )